- block:
    - name: Create the .conf file to load the modules at bootup
      ansible.builtin.copy:
        dest: /etc/modules-load.d/crio.conf
        content: |
          overlay
          br_netfilter

    - name: Load the needed kernel modules
      community.general.modprobe:
        name: "{{ item }}"
        state: present
      loop:
        - overlay
        - br_netfilter

    - name: Set up required sysctl params, these persist across reboots
      ansible.builtin.copy:
        dest: /etc/sysctl.d/99-kubernetes-cri.conf
        content: |
          net.bridge.bridge-nf-call-iptables  = 1
          net.ipv4.ip_forward                 = 1
          net.bridge.bridge-nf-call-ip6tables = 1

    - name: Reload kernel parameters with sysctl
      ansible.builtin.command: sysctl --system
      changed_when: false

    - name: Setup the devel_kubic_libcontainers_stable repository
      ansible.builtin.get_url:
        url: https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/{{ crio_os }}/devel:kubic:libcontainers:stable.repo
        dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable.repo

    - name: Setup the devel_kubic_libcontainers_stable_cri-o_1.18 repository
      ansible.builtin.get_url:
        url: https://download.opensuse.org/repositories/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}/{{ crio_os }}/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}.repo
        dest: /etc/yum.repos.d/devel:kubic:libcontainers:stable:cri-o:{{ crio_version }}.repo

    - name: Install cri-o
      ansible.builtin.dnf:
        name: cri-o
        state: latest

    - name: Copy the cri-o config file
      ansible.builtin.copy:
        src: crio.conf
        dest: /etc/crio/crio.conf

    - name: Enable and start the cri-o service
      ansible.builtin.systemd:
        daemon_reload: yes
        state: started
        enabled: yes
        name: crio
  become: yes
